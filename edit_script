#!/bin/bash

# edits files with default text editor
# searches directory tree for files whose name contains a user-provided
# search term and prompts the user to choose which file to edit

# improvement idea: optional argument for search path

main()
{
    if [[ $# -ne 1 ]]; then
        echo "Missing search term." 1>&2
        exit 1
    fi
    searchterm="$1"
    if ! set_text_editor; then
        echo "No text editor is defined: set EDITOR or install vim." 1>&2
        exit 1
    fi 
    edit_candidates=$(search_for_candidates)
    if [[ ! $edit_candidates ]]; then
        echo "No files match '$searchterm'." 1>&2
        exit 1
    fi
    num_of_candidates=$(count_candidates)
    if [[ $num_of_candidates -gt 1 ]]; then
        prompt_user_to_choose_candidate
        file_to_edit=$(pick_chosen_file)
    else
        # just one candidate...
        file_to_edit="$edit_candidates"
    fi
    edit_file
    exit 0
}

search_for_candidates()
{
    echo "$(find . -type f ! -path "*.git*" ! -name "*~" ! -name "*.pyc" -iname "*$searchterm*")"
    return 0
}

set_text_editor()
{
    if [[ ! $EDITOR ]]; then
        if type vim &> /dev/null; then
            EDITOR="vim"
        else
            return 1
        fi
    fi
    return 0
}

count_candidates()
{
    line_count_output=$(wc -l <<< "$edit_candidates")
    num_of_candidates=$(grep -Eo [[:digit:]]+ <<< "$line_count_output")
    echo "$num_of_candidates"
    return 0
}

prompt_user_to_choose_candidate()
{
    nl -s ") " <<< "$edit_candidates"
    echo
    printf "Choose a file to edit: "
    read -r user_choice
    # If a non-integer value was typed, Bash will convert it to 0 without warning.
    # To treat the value 0 as an invalid input, I need to compare it to the string "0".
    while [[ $user_choice = "0" || $user_choice -lt 0 || $user_choice -gt $num_of_candidates ]]; do
        echo "Invalid choice."
        printf "Choose a file to edit: "
        read -r user_choice
    done
    # Non-numeric choices exit the program.
    if [[ $user_choice -eq 0 ]]; then
        exit 0
    fi
    return 0
}

pick_chosen_file()
{
    echo $(sed -n "$user_choice"p <<< "$edit_candidates")
    return 0
}

edit_file()
{
    $EDITOR "$file_to_edit"
    return 0
}

main "$@"

